Index: web/modules/contrib/protected_pages/src/ProtectedPagesStorage.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/modules/contrib/protected_pages/src/ProtectedPagesStorage.php	(date 1602518233052)
+++ web/modules/contrib/protected_pages/src/ProtectedPagesStorage.php	(date 1602518233052)
@@ -43,8 +43,8 @@
    */
   public function insertProtectedPage(array $page_data) {
     $query = $this->connection->insert('protected_pages')
-        ->fields(array('password', 'path'))
-        ->values($page_data);
+      ->fields(['password', 'path'])
+      ->values($page_data);
     $pid = $query->execute();
     return $pid;
   }
@@ -59,9 +59,9 @@
    */
   public function updateProtectedPage(array $page_data, $pid) {
     $this->connection->update('protected_pages')
-        ->fields($page_data)
-        ->condition('pid', $pid)
-        ->execute();
+      ->fields($page_data)
+      ->condition('pid', $pid)
+      ->execute();
   }
 
   /**
@@ -72,8 +72,8 @@
    */
   public function deleteProtectedPage($pid) {
     $this->connection->delete('protected_pages')
-        ->condition('pid', $pid)
-        ->execute();
+      ->condition('pid', $pid)
+      ->execute();
   }
 
   /**
@@ -86,7 +86,7 @@
    * @param bool $get_single_field
    *   Boolean to check if functions needs to return one or multiple fields.
    */
-  public function loadProtectedPage($fields = array(), $query_conditions = array(), $get_single_field = FALSE) {
+  public function loadProtectedPage($fields = [], $query_conditions = [], $get_single_field = FALSE) {
     $select = $this->connection->select('protected_pages');
     if (count($fields)) {
       $select->fields('protected_pages', $fields);
@@ -99,14 +99,47 @@
       if (isset($query_conditions['or']) && count($query_conditions['or'])) {
         $conditions = new Condition('OR');
         foreach ($query_conditions['or'] as $condition) {
-          $conditions->condition($condition['field'], $condition['value'], $condition['operator']);
+          if (isset($condition['field'])) {
+            // Simplified condition
+            $conditions->condition($condition['field'], $condition['value'], $condition['operator']);
+          }
+          elseif (isset($condition['statement'])) {
+            // Where clause
+            $where_args = [];
+            if (isset($condition['args'])) {
+              $where_args = $condition['args'];
+            }
+            $conditions->where($condition['statement'], $where_args);
+          }
         }
         $select->condition($conditions);
       }
       if (isset($query_conditions['and']) && count($query_conditions['and'])) {
 
         foreach ($query_conditions['and'] as $condition) {
-          $select->condition($condition['field'], $condition['value'], $condition['operator']);
+          if (isset($condition['field'])) {
+            // Simplified condition
+            $select->condition($condition['field'], $condition['value'], $condition['operator']);
+          }
+          elseif (isset($condition['statement'])) {
+            // Where clause
+            $where_args = [];
+            if (isset($condition['args'])) {
+              $where_args = $condition['args'];
+            }
+            if (isset($condition['field'])) {
+              // Simplified condition
+              $select->condition($condition['field'], $condition['value'], $condition['operator']);
+            }
+            elseif (isset($condition['statement'])) {
+              // Where clause
+              $where_args = [];
+              if (isset($condition['args'])) {
+                $where_args = $condition['args'];
+              }
+              $select->where($condition['statement'], $where_args);
+            }
+          }
         }
       }
       if (isset($query_conditions['general']) && count($query_conditions['general'])) {
@@ -116,6 +149,16 @@
         }
       }
     }
+    if (!empty($where_clause) && count($where_clause) == 2) {
+      $where_args = [];
+      if (isset($where_clause['args'])) {
+        $where_args = $where_clause['args'];
+      }
+
+      if (isset($where_clause['statement'])) {
+        $select->where($where_clause['statement'], $where_args);
+      }
+    }
 
     if ($get_single_field) {
       $select->range(0, 1);
@@ -133,12 +176,12 @@
    */
   public function loadAllProtectedPages() {
     $results = $this->connection->select('protected_pages', 'p')
-        ->extend('Drupal\Core\Database\Query\PagerSelectExtender')
-        ->fields('p')
-        ->orderBy('p.pid', 'DESC')
-        ->limit(20)
-        ->execute()
-        ->fetchAll();
+      ->extend('Drupal\Core\Database\Query\PagerSelectExtender')
+      ->fields('p')
+      ->orderBy('p.pid', 'DESC')
+      ->limit(20)
+      ->execute()
+      ->fetchAll();
 
     return $results;
   }
